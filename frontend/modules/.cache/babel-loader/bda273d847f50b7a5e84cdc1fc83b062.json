{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspaces\\\\ws-sds3\\\\projeto-sds3\\\\frontend\\\\src\\\\components\\\\DonutChart\\\\index.tsx\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\nimport { BASE_URL } from \"utils/requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DonutChart = () => {\n  //forma errada de fazer\n  let chartData = {\n    labels: [],\n    series: []\n  }; //Forma errada de fazer\n\n  axios.get(`${BASE_URL}/sales/amount-by-seller`).then(response => {\n    const data = response.data;\n    const myLabels = data.map(x => x.sellerName);\n    const mySeries = data.map(x => x.sum);\n    chartData = {\n      labels: myLabels,\n      series: mySeries\n    };\n    console.log(chartData);\n  }); //const mockData = {\n  //      series: [477138, 499928, 444867, 220426, 473088],\n  //      labels: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n  //  }\n\n  const options = {\n    legend: {\n      show: true\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      labels: charData.labels\n    },\n    series: charData.series,\n    type: \"donut\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DonutChart;\nexport default DonutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonutChart\");","map":{"version":3,"sources":["C:/workspaces/ws-sds3/projeto-sds3/frontend/src/components/DonutChart/index.tsx"],"names":["axios","Chart","BASE_URL","DonutChart","chartData","labels","series","get","then","response","data","myLabels","map","x","sellerName","mySeries","sum","console","log","options","legend","show","charData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;;AAOA,MAAMC,UAAU,GAAG,MAAM;AAErB;AACA,MAAIC,SAAoB,GAAG;AAAEC,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAA3B,CAHqB,CAKrB;;AACAN,EAAAA,KAAK,CAACO,GAAN,CAAW,GAAEL,QAAS,yBAAtB,EACKM,IADL,CACUC,QAAQ,IAAI;AACd,UAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,UAAMC,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,UAAhB,CAAjB;AACA,UAAMC,QAAQ,GAAGL,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACG,GAAhB,CAAjB;AAEAZ,IAAAA,SAAS,GAAG;AAAEC,MAAAA,MAAM,EAAEM,QAAV;AAAoBL,MAAAA,MAAM,EAAES;AAA5B,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AACH,GARL,EANqB,CAgBrB;AACA;AACA;AACA;;AAEA,QAAMe,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE;AADF;AADI,GAAhB;AAMA,sBAEI,QAAC,KAAD;AACI,IAAA,OAAO,EAAE,EAAE,GAAGF,OAAL;AAAcd,MAAAA,MAAM,EAAEiB,QAAQ,CAACjB;AAA/B,KADb;AAEI,IAAA,MAAM,EAAEiB,QAAQ,CAAChB,MAFrB;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,UAFJ;AASH,CApCD;;KAAMH,U;AAsCN,eAAeA,UAAf","sourcesContent":["import axios from \"axios\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { SaleSum } from \"types/sale\";\r\nimport { BASE_URL } from \"utils/requests\";\r\n\r\ntype ChartData = {\r\n    labels: string[];\r\n    series: number[];\r\n}\r\n\r\nconst DonutChart = () => {\r\n\r\n    //forma errada de fazer\r\n    let chartData: ChartData = { labels: [], series: [] };\r\n\r\n    //Forma errada de fazer\r\n    axios.get(`${BASE_URL}/sales/amount-by-seller`)\r\n        .then(response => {\r\n            const data = response.data as SaleSum[];\r\n            const myLabels = data.map(x => x.sellerName);\r\n            const mySeries = data.map(x => x.sum);\r\n\r\n            chartData = { labels: myLabels, series: mySeries };\r\n            console.log(chartData);\r\n        });\r\n\r\n    //const mockData = {\r\n    //      series: [477138, 499928, 444867, 220426, 473088],\r\n    //      labels: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\r\n    //  }\r\n\r\n    const options = {\r\n        legend: {\r\n            show: true\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <Chart\r\n            options={{ ...options, labels: charData.labels }}\r\n            series={charData.series}\r\n            type=\"donut\"\r\n            height=\"240\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default DonutChart;"]},"metadata":{},"sourceType":"module"}